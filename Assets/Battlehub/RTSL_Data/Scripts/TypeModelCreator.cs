using System;
using ProtoBuf.Meta;
using UnityEngine;
using Battlehub.RTCommon;
using Battlehub.RTSL.Interface;

namespace Battlehub.RTSL
{
    public partial class TypeModelCreator : ITypeModelCreator
    {
        #if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
        #endif
        [UnityEngine.RuntimeInitializeOnLoadMethod(UnityEngine.RuntimeInitializeLoadType.SubsystemRegistration)]
        static void Register()
        {
            IOC.UnregisterFallback<ITypeModelCreator>();
            IOC.RegisterFallback<ITypeModelCreator>(() => new TypeModelCreator());
        }
        static partial void RegisterUserDefinedTypes(RuntimeTypeModel model);
        void ITypeModelCreator.Create(RuntimeTypeModel model)
        {
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentObject<long>), true)
                .AddSubType(1025, typeof(UnityEngine.Battlehub.SL2.PersistentGameObject<long>))
                .AddSubType(1028, typeof(UnityEngine.Battlehub.SL2.PersistentMaterial<long>))
                .AddSubType(1029, typeof(UnityEngine.Battlehub.SL2.PersistentComponent<long>))
                .AddSubType(1030, typeof(UnityEngine.Battlehub.SL2.PersistentMesh<long>))
                .AddSubType(1032, typeof(UnityEngine.Battlehub.SL2.PersistentTexture<long>))
                .AddSubType(1033, typeof(UnityEngine.Battlehub.SL2.PersistentFlare<long>))
                .AddSubType(1034, typeof(UnityEngine.Battlehub.SL2.PersistentPhysicMaterial<long>))
                .AddSubType(1037, typeof(UnityEngine.Battlehub.SL2.PersistentSprite<long>))
                .AddSubType(1042, typeof(UnityEngine.Battlehub.SL2.PersistentAvatar<long>))
                .AddSubType(1043, typeof(UnityEngine.Battlehub.SL2.PersistentRuntimeAnimatorController<long>))
                .AddSubType(1044, typeof(UnityEngine.Battlehub.SL2.PersistentFont<long>))
                .AddSubType(1045, typeof(RTSL.Battlehub.SL2.PersistentRuntimePrefab<long>))
                .AddSubType(1046, typeof(UnityEngine.Battlehub.SL2.PersistentTerrainData<long>))
                .AddSubType(1047, typeof(UnityEngine.Battlehub.SL2.PersistentTerrainLayer<long>))
                .AddSubType(1048, typeof(RTEditor.Battlehub.SL2.PersistentRuntimeAnimationClip<long>))
                .AddSubType(1049, typeof(UnityEngine.Battlehub.SL2.PersistentAudioClip<long>))
                .AddSubType(1050, typeof(UnityEngine.Audio.Battlehub.SL2.PersistentAudioMixer<long>))
                .AddSubType(1051, typeof(UnityEngine.Audio.Battlehub.SL2.PersistentAudioMixerGroup<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentGameObject<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentRenderer<long>), true)
                .AddSubType(1025, typeof(UnityEngine.Battlehub.SL2.PersistentMeshRenderer<long>))
                .AddSubType(1026, typeof(UnityEngine.Battlehub.SL2.PersistentSkinnedMeshRenderer<long>))
                .AddSubType(1027, typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemRenderer<long>))
                .AddSubType(1028, typeof(UnityEngine.Battlehub.SL2.PersistentSpriteRenderer<long>))
                .AddSubType(1029, typeof(UnityEngine.Battlehub.SL2.PersistentLineRenderer<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentMeshRenderer<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentMeshFilter<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentSkinnedMeshRenderer<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentMesh<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentMaterial<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentRigidbody<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentBoxCollider<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentSphereCollider<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentCapsuleCollider<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentMeshCollider<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentCamera<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentAudioClip<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentAudioSource<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentLight<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentAnimator<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentAudioListener<long>), true);
            model.Add(typeof(UnityEngine.Audio.Battlehub.SL2.PersistentAudioMixer<long>), true);
            model.Add(typeof(UnityEngine.Audio.Battlehub.SL2.PersistentAudioMixerGroup<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentAvatar<long>), true);
            model.Add(typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentBaseInputModule<long>), true)
                .AddSubType(1025, typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentPointerInputModule<long>));
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentBaseMeshEffect<long>), true)
                .AddSubType(1025, typeof(UnityEngine.UI.Battlehub.SL2.PersistentShadow<long>));
            model.Add(typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentBaseRaycaster<long>), true)
                .AddSubType(1025, typeof(UnityEngine.UI.Battlehub.SL2.PersistentGraphicRaycaster<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentBehaviour<long>), true)
                .AddSubType(1025, typeof(UnityEngine.Battlehub.SL2.PersistentCamera<long>))
                .AddSubType(1026, typeof(UnityEngine.Battlehub.SL2.PersistentLight<long>))
                .AddSubType(1027, typeof(UnityEngine.Battlehub.SL2.PersistentMonoBehaviour<long>))
                .AddSubType(1030, typeof(UnityEngine.Battlehub.SL2.PersistentAnimator<long>))
                .AddSubType(1031, typeof(UnityEngine.Battlehub.SL2.PersistentCanvas<long>))
                .AddSubType(1032, typeof(UnityEngine.Battlehub.SL2.PersistentSkybox<long>))
                .AddSubType(1033, typeof(UnityEngine.Battlehub.SL2.PersistentTerrain<long>))
                .AddSubType(1034, typeof(UnityEngine.Battlehub.SL2.PersistentAudioSource<long>))
                .AddSubType(1035, typeof(UnityEngine.Battlehub.SL2.PersistentAudioListener<long>));
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentButton<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentCanvas<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentCollider<long>), true)
                .AddSubType(1025, typeof(UnityEngine.Battlehub.SL2.PersistentBoxCollider<long>))
                .AddSubType(1026, typeof(UnityEngine.Battlehub.SL2.PersistentSphereCollider<long>))
                .AddSubType(1027, typeof(UnityEngine.Battlehub.SL2.PersistentCapsuleCollider<long>))
                .AddSubType(1028, typeof(UnityEngine.Battlehub.SL2.PersistentMeshCollider<long>))
                .AddSubType(1029, typeof(UnityEngine.Battlehub.SL2.PersistentTerrainCollider<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentComponent<long>), true)
                .AddSubType(1025, typeof(UnityEngine.Battlehub.SL2.PersistentRenderer<long>))
                .AddSubType(1026, typeof(UnityEngine.Battlehub.SL2.PersistentTransform<long>))
                .AddSubType(1027, typeof(UnityEngine.Battlehub.SL2.PersistentMeshFilter<long>))
                .AddSubType(1028, typeof(UnityEngine.Battlehub.SL2.PersistentBehaviour<long>))
                .AddSubType(1029, typeof(UnityEngine.Battlehub.SL2.PersistentRigidbody<long>))
                .AddSubType(1030, typeof(UnityEngine.Battlehub.SL2.PersistentCollider<long>))
                .AddSubType(1031, typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystem<long>))
                .AddSubType(1032, typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemForceField<long>));
            model.Add(typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentEventSystem<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentFlare<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentFont<long>), true);
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentGraphic<long>), true)
                .AddSubType(1027, typeof(UnityEngine.UI.Battlehub.SL2.PersistentMaskableGraphic<long>));
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentGraphicRaycaster<long>), true);
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentImage<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentLineRenderer<long>), true);
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentMaskableGraphic<long>), true)
                .AddSubType(1025, typeof(UnityEngine.UI.Battlehub.SL2.PersistentImage<long>))
                .AddSubType(1026, typeof(UnityEngine.UI.Battlehub.SL2.PersistentText<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentMonoBehaviour<long>), true)
                .AddSubType(1026, typeof(RTCommon.Battlehub.SL2.PersistentExposeToEditor<long>))
                .AddSubType(1027, typeof(Cubeman.Battlehub.SL2.PersistentGameCameraFollow<long>))
                .AddSubType(1028, typeof(RTEditor.Battlehub.SL2.PersistentGameViewCamera<long>))
                .AddSubType(1030, typeof(Cubeman.Battlehub.SL2.PersistentCubemanCharacter<long>))
                .AddSubType(1031, typeof(Cubeman.Battlehub.SL2.PersistentCubemanUserControl<long>))
                .AddSubType(1032, typeof(Cubeman.Battlehub.SL2.PersistentCubemenGame<long>))
                .AddSubType(1034, typeof(Cubeman.Battlehub.SL2.PersistentGameCharacter<long>))
                .AddSubType(1035, typeof(Cubeman.Battlehub.SL2.PersistentGameFerry<long>))
                .AddSubType(1036, typeof(Cubeman.Battlehub.SL2.PersistentGameFerryBehavior<long>))
                .AddSubType(1037, typeof(Cubeman.Battlehub.SL2.PersistentGameFerryButton<long>))
                .AddSubType(1038, typeof(Cubeman.Battlehub.SL2.PersistentGameGoal<long>))
                .AddSubType(1039, typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentUIBehaviour<long>))
                .AddSubType(1040, typeof(RTEditor.Battlehub.SL2.PersistentRuntimeAnimation<long>))
                .AddSubType(1041, typeof(RTBuilder.Battlehub.SL2.PersistentMaterialPalette<long>))
                .AddSubType(1042, typeof(ProBuilderIntegration.Battlehub.SL2.PersistentPBMesh<long>))
                .AddSubType(1043, typeof(ProBuilderIntegration.Battlehub.SL2.PersistentPBPolyShape<long>))
                .AddSubType(1044, typeof(RTTerrain.Battlehub.SL2.PersistentTerrainBrushSource<long>));
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentOutline<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystem<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemRenderer<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentPhysicMaterial<long>), true);
            model.Add(typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentPointerInputModule<long>), true)
                .AddSubType(1025, typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentStandaloneInputModule<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentRectTransform<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentRenderTexture<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentRuntimeAnimatorController<long>), true);
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentSelectable<long>), true)
                .AddSubType(1025, typeof(UnityEngine.UI.Battlehub.SL2.PersistentButton<long>));
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentShadow<long>), true)
                .AddSubType(1025, typeof(UnityEngine.UI.Battlehub.SL2.PersistentOutline<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentTerrain<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentTerrainData<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentSkybox<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentSprite<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentSpriteRenderer<long>), true);
            model.Add(typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentStandaloneInputModule<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentTerrainCollider<long>), true);
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentText<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentTexture<long>), true)
                .AddSubType(1025, typeof(UnityEngine.Battlehub.SL2.PersistentRenderTexture<long>))
                .AddSubType(1026, typeof(UnityEngine.Battlehub.SL2.PersistentTexture2D<long>))
                .AddSubType(1027, typeof(UnityEngine.Battlehub.SL2.PersistentTexture3D<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentTexture2D<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentTexture3D<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentTransform<long>), true)
                .AddSubType(1025, typeof(UnityEngine.Battlehub.SL2.PersistentRectTransform<long>));
            model.Add(typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentUIBehaviour<long>), true)
                .AddSubType(1025, typeof(UnityEngine.UI.Battlehub.SL2.PersistentGraphic<long>))
                .AddSubType(1026, typeof(UnityEngine.UI.Battlehub.SL2.PersistentSelectable<long>))
                .AddSubType(1027, typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentBaseRaycaster<long>))
                .AddSubType(1028, typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentEventSystem<long>))
                .AddSubType(1029, typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentBaseInputModule<long>))
                .AddSubType(1030, typeof(UnityEngine.UI.Battlehub.SL2.PersistentBaseMeshEffect<long>));
            model.Add(typeof(RTCommon.Battlehub.SL2.PersistentExposeToEditor<long>), true);
            model.Add(typeof(RTEditor.Battlehub.SL2.PersistentGameViewCamera<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemForceField<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentTerrainLayer<long>), true);
            model.Add(typeof(RTSL.Battlehub.SL2.PersistentRuntimePrefab<long>), true)
                .AddSubType(1025, typeof(RTSL.Battlehub.SL2.PersistentRuntimeScene<long>));
            model.Add(typeof(RTSL.Battlehub.SL2.PersistentRuntimeScene<long>), true);
            model.Add(typeof(RTEditor.Battlehub.SL2.PersistentRuntimeAnimation<long>), true);
            model.Add(typeof(RTEditor.Battlehub.SL2.PersistentRuntimeAnimationClip<long>), true);
            model.Add(typeof(Cubeman.Battlehub.SL2.PersistentCubemanCharacter<long>), true);
            model.Add(typeof(Cubeman.Battlehub.SL2.PersistentCubemanUserControl<long>), true);
            model.Add(typeof(Cubeman.Battlehub.SL2.PersistentCubemenGame<long>), true);
            model.Add(typeof(Cubeman.Battlehub.SL2.PersistentGameCameraFollow<long>), true);
            model.Add(typeof(Cubeman.Battlehub.SL2.PersistentGameCharacter<long>), true);
            model.Add(typeof(Cubeman.Battlehub.SL2.PersistentGameFerry<long>), true);
            model.Add(typeof(Cubeman.Battlehub.SL2.PersistentGameFerryBehavior<long>), true);
            model.Add(typeof(Cubeman.Battlehub.SL2.PersistentGameFerryButton<long>), true);
            model.Add(typeof(Cubeman.Battlehub.SL2.PersistentGameGoal<long>), true);
            model.Add(typeof(RTBuilder.Battlehub.SL2.PersistentMaterialPalette<long>), true);
            model.Add(typeof(ProBuilderIntegration.Battlehub.SL2.PersistentPBMesh<long>), true);
            model.Add(typeof(ProBuilderIntegration.Battlehub.SL2.PersistentPBPolyShape<long>), true);
            model.Add(typeof(RTTerrain.Battlehub.SL2.PersistentTerrainBrushSource<long>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentVector2<long>), true);
            model.Add(typeof(UnityEngine.Vector2), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentVector2<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentVector3<long>), true);
            model.Add(typeof(UnityEngine.Vector3), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentVector3<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentVector4<long>), true);
            model.Add(typeof(UnityEngine.Vector4), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentVector4<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentColor<long>), true);
            model.Add(typeof(UnityEngine.Color), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentColor<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentColor32<long>), true);
            model.Add(typeof(UnityEngine.Color32), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentColor32<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentMatrix4x4<long>), true);
            model.Add(typeof(UnityEngine.Matrix4x4), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentMatrix4x4<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentAnimationCurve<long>), true);
            model.Add(typeof(UnityEngine.AnimationCurve), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentAnimationCurve<long>));
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentAnimationTriggers<long>), true);
            model.Add(typeof(UnityEngine.UI.AnimationTriggers), false).SetSurrogate(typeof(UnityEngine.UI.Battlehub.SL2.PersistentAnimationTriggers<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentBoneWeight<long>), true);
            model.Add(typeof(UnityEngine.BoneWeight), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentBoneWeight<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentBounds<long>), true);
            model.Add(typeof(UnityEngine.Bounds), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentBounds<long>));
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentButtonNestedButtonClickedEvent<long>), true);
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentColorBlock<long>), true);
            model.Add(typeof(UnityEngine.UI.ColorBlock), false).SetSurrogate(typeof(UnityEngine.UI.Battlehub.SL2.PersistentColorBlock<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentDetailPrototype<long>), true);
            model.Add(typeof(UnityEngine.DetailPrototype), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentDetailPrototype<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentGradient<long>), true);
            model.Add(typeof(UnityEngine.Gradient), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentGradient<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentGradientAlphaKey<long>), true);
            model.Add(typeof(UnityEngine.GradientAlphaKey), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentGradientAlphaKey<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentGradientColorKey<long>), true);
            model.Add(typeof(UnityEngine.GradientColorKey), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentGradientColorKey<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentKeyframe<long>), true);
            model.Add(typeof(UnityEngine.Keyframe), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentKeyframe<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentLayerMask<long>), true);
            model.Add(typeof(UnityEngine.LayerMask), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentLayerMask<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentLightBakingOutput<long>), true);
            model.Add(typeof(UnityEngine.LightBakingOutput), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentLightBakingOutput<long>));
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentMaskableGraphicNestedCullStateChangedEvent<long>), true);
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentNavigation<long>), true);
            model.Add(typeof(UnityEngine.UI.Navigation), false).SetSurrogate(typeof(UnityEngine.UI.Battlehub.SL2.PersistentNavigation<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedCollisionModule<long>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.CollisionModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedCollisionModule<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedColorBySpeedModule<long>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.ColorBySpeedModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedColorBySpeedModule<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedColorOverLifetimeModule<long>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.ColorOverLifetimeModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedColorOverLifetimeModule<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedCustomDataModule<long>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.CustomDataModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedCustomDataModule<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedEmissionModule<long>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.EmissionModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedEmissionModule<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedExternalForcesModule<long>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.ExternalForcesModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedExternalForcesModule<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedForceOverLifetimeModule<long>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.ForceOverLifetimeModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedForceOverLifetimeModule<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedInheritVelocityModule<long>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.InheritVelocityModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedInheritVelocityModule<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedLightsModule<long>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.LightsModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedLightsModule<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedLimitVelocityOverLifetimeModule<long>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedLimitVelocityOverLifetimeModule<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedMainModule<long>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.MainModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedMainModule<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedMinMaxCurve<long>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.MinMaxCurve), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedMinMaxCurve<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedMinMaxGradient<long>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.MinMaxGradient), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedMinMaxGradient<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedNoiseModule<long>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.NoiseModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedNoiseModule<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedRotationBySpeedModule<long>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.RotationBySpeedModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedRotationBySpeedModule<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedRotationOverLifetimeModule<long>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.RotationOverLifetimeModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedRotationOverLifetimeModule<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedShapeModule<long>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.ShapeModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedShapeModule<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedSizeBySpeedModule<long>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.SizeBySpeedModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedSizeBySpeedModule<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedSizeOverLifetimeModule<long>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.SizeOverLifetimeModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedSizeOverLifetimeModule<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedSubEmittersModule<long>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.SubEmittersModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedSubEmittersModule<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedTrailModule<long>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.TrailModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedTrailModule<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedTriggerModule<long>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.TriggerModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedTriggerModule<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedVelocityOverLifetimeModule<long>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.VelocityOverLifetimeModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedVelocityOverLifetimeModule<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedTextureSheetAnimationModule<long>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.TextureSheetAnimationModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedTextureSheetAnimationModule<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentQuaternion<long>), true);
            model.Add(typeof(UnityEngine.Quaternion), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentQuaternion<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentRect<long>), true);
            model.Add(typeof(UnityEngine.Rect), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentRect<long>));
            model.Add(typeof(UnityEngine.SceneManagement.Battlehub.SL2.PersistentScene<long>), true);
            model.Add(typeof(UnityEngine.SceneManagement.Scene), false).SetSurrogate(typeof(UnityEngine.SceneManagement.Battlehub.SL2.PersistentScene<long>));
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentSpriteState<long>), true);
            model.Add(typeof(UnityEngine.UI.SpriteState), false).SetSurrogate(typeof(UnityEngine.UI.Battlehub.SL2.PersistentSpriteState<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentTreeInstance<long>), true);
            model.Add(typeof(UnityEngine.TreeInstance), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentTreeInstance<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentTreePrototype<long>), true);
            model.Add(typeof(UnityEngine.TreePrototype), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentTreePrototype<long>));
            model.Add(typeof(RTCommon.Battlehub.SL2.PersistentExposeToEditorUnityEvent<long>), true);
            model.Add(typeof(UnityEngine.Events.Battlehub.SL2.PersistentUnityEvent<long>), true)
                .AddSubType(1032, typeof(UnityEngine.UI.Battlehub.SL2.PersistentButtonNestedButtonClickedEvent<long>));
            model.Add(typeof(UnityEngine.Events.Battlehub.SL2.PersistentUnityEventBase<long>), true)
                .AddSubType(1025, typeof(UnityEngine.Events.Battlehub.SL2.PersistentUnityEvent<long>))
                .AddSubType(1026, typeof(RTCommon.Battlehub.SL2.PersistentExposeToEditorUnityEvent<long>))
                .AddSubType(1027, typeof(UnityEngine.UI.Battlehub.SL2.PersistentMaskableGraphicNestedCullStateChangedEvent<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedBurst<long>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.Burst), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedBurst<long>));
            model.Add(typeof(RTEditor.Battlehub.SL2.PersistentRuntimeAnimationProperty<long>), true);
            model.Add(typeof(RTEditor.RuntimeAnimationProperty), false).SetSurrogate(typeof(RTEditor.Battlehub.SL2.PersistentRuntimeAnimationProperty<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentHumanBone<long>), true);
            model.Add(typeof(UnityEngine.HumanBone), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentHumanBone<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentHumanDescription<long>), true);
            model.Add(typeof(UnityEngine.HumanDescription), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentHumanDescription<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentHumanLimit<long>), true);
            model.Add(typeof(UnityEngine.HumanLimit), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentHumanLimit<long>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentSkeletonBone<long>), true);
            model.Add(typeof(UnityEngine.SkeletonBone), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentSkeletonBone<long>));
            model.Add(typeof(ProBuilderIntegration.Battlehub.SL2.PersistentPBAutoUnwrapSettings<long>), true);
            model.Add(typeof(ProBuilderIntegration.PBAutoUnwrapSettings), false).SetSurrogate(typeof(ProBuilderIntegration.Battlehub.SL2.PersistentPBAutoUnwrapSettings<long>));
            model.Add(typeof(ProBuilderIntegration.Battlehub.SL2.PersistentPBFace<long>), true);
            model.Add(typeof(ProBuilderIntegration.PBFace), false).SetSurrogate(typeof(ProBuilderIntegration.Battlehub.SL2.PersistentPBFace<long>));
            
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentObject<Guid>), true)
                .AddSubType(1025, typeof(UnityEngine.Battlehub.SL2.PersistentGameObject<Guid>))
                .AddSubType(1028, typeof(UnityEngine.Battlehub.SL2.PersistentMaterial<Guid>))
                .AddSubType(1029, typeof(UnityEngine.Battlehub.SL2.PersistentComponent<Guid>))
                .AddSubType(1030, typeof(UnityEngine.Battlehub.SL2.PersistentMesh<Guid>))
                .AddSubType(1032, typeof(UnityEngine.Battlehub.SL2.PersistentTexture<Guid>))
                .AddSubType(1033, typeof(UnityEngine.Battlehub.SL2.PersistentFlare<Guid>))
                .AddSubType(1034, typeof(UnityEngine.Battlehub.SL2.PersistentPhysicMaterial<Guid>))
                .AddSubType(1037, typeof(UnityEngine.Battlehub.SL2.PersistentSprite<Guid>))
                .AddSubType(1042, typeof(UnityEngine.Battlehub.SL2.PersistentAvatar<Guid>))
                .AddSubType(1043, typeof(UnityEngine.Battlehub.SL2.PersistentRuntimeAnimatorController<Guid>))
                .AddSubType(1044, typeof(UnityEngine.Battlehub.SL2.PersistentFont<Guid>))
                .AddSubType(1045, typeof(RTSL.Battlehub.SL2.PersistentRuntimePrefab<Guid>))
                .AddSubType(1046, typeof(UnityEngine.Battlehub.SL2.PersistentTerrainData<Guid>))
                .AddSubType(1047, typeof(UnityEngine.Battlehub.SL2.PersistentTerrainLayer<Guid>))
                .AddSubType(1048, typeof(RTEditor.Battlehub.SL2.PersistentRuntimeAnimationClip<Guid>))
                .AddSubType(1049, typeof(UnityEngine.Battlehub.SL2.PersistentAudioClip<Guid>))
                .AddSubType(1050, typeof(UnityEngine.Audio.Battlehub.SL2.PersistentAudioMixer<Guid>))
                .AddSubType(1051, typeof(UnityEngine.Audio.Battlehub.SL2.PersistentAudioMixerGroup<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentGameObject<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentRenderer<Guid>), true)
                .AddSubType(1025, typeof(UnityEngine.Battlehub.SL2.PersistentMeshRenderer<Guid>))
                .AddSubType(1026, typeof(UnityEngine.Battlehub.SL2.PersistentSkinnedMeshRenderer<Guid>))
                .AddSubType(1027, typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemRenderer<Guid>))
                .AddSubType(1028, typeof(UnityEngine.Battlehub.SL2.PersistentSpriteRenderer<Guid>))
                .AddSubType(1029, typeof(UnityEngine.Battlehub.SL2.PersistentLineRenderer<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentMeshRenderer<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentMeshFilter<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentSkinnedMeshRenderer<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentMesh<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentMaterial<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentRigidbody<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentBoxCollider<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentSphereCollider<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentCapsuleCollider<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentMeshCollider<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentCamera<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentAudioClip<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentAudioSource<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentLight<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentAnimator<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentAudioListener<Guid>), true);
            model.Add(typeof(UnityEngine.Audio.Battlehub.SL2.PersistentAudioMixer<Guid>), true);
            model.Add(typeof(UnityEngine.Audio.Battlehub.SL2.PersistentAudioMixerGroup<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentAvatar<Guid>), true);
            model.Add(typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentBaseInputModule<Guid>), true)
                .AddSubType(1025, typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentPointerInputModule<Guid>));
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentBaseMeshEffect<Guid>), true)
                .AddSubType(1025, typeof(UnityEngine.UI.Battlehub.SL2.PersistentShadow<Guid>));
            model.Add(typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentBaseRaycaster<Guid>), true)
                .AddSubType(1025, typeof(UnityEngine.UI.Battlehub.SL2.PersistentGraphicRaycaster<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentBehaviour<Guid>), true)
                .AddSubType(1025, typeof(UnityEngine.Battlehub.SL2.PersistentCamera<Guid>))
                .AddSubType(1026, typeof(UnityEngine.Battlehub.SL2.PersistentLight<Guid>))
                .AddSubType(1027, typeof(UnityEngine.Battlehub.SL2.PersistentMonoBehaviour<Guid>))
                .AddSubType(1030, typeof(UnityEngine.Battlehub.SL2.PersistentAnimator<Guid>))
                .AddSubType(1031, typeof(UnityEngine.Battlehub.SL2.PersistentCanvas<Guid>))
                .AddSubType(1032, typeof(UnityEngine.Battlehub.SL2.PersistentSkybox<Guid>))
                .AddSubType(1033, typeof(UnityEngine.Battlehub.SL2.PersistentTerrain<Guid>))
                .AddSubType(1034, typeof(UnityEngine.Battlehub.SL2.PersistentAudioSource<Guid>))
                .AddSubType(1035, typeof(UnityEngine.Battlehub.SL2.PersistentAudioListener<Guid>));
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentButton<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentCanvas<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentCollider<Guid>), true)
                .AddSubType(1025, typeof(UnityEngine.Battlehub.SL2.PersistentBoxCollider<Guid>))
                .AddSubType(1026, typeof(UnityEngine.Battlehub.SL2.PersistentSphereCollider<Guid>))
                .AddSubType(1027, typeof(UnityEngine.Battlehub.SL2.PersistentCapsuleCollider<Guid>))
                .AddSubType(1028, typeof(UnityEngine.Battlehub.SL2.PersistentMeshCollider<Guid>))
                .AddSubType(1029, typeof(UnityEngine.Battlehub.SL2.PersistentTerrainCollider<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentComponent<Guid>), true)
                .AddSubType(1025, typeof(UnityEngine.Battlehub.SL2.PersistentRenderer<Guid>))
                .AddSubType(1026, typeof(UnityEngine.Battlehub.SL2.PersistentTransform<Guid>))
                .AddSubType(1027, typeof(UnityEngine.Battlehub.SL2.PersistentMeshFilter<Guid>))
                .AddSubType(1028, typeof(UnityEngine.Battlehub.SL2.PersistentBehaviour<Guid>))
                .AddSubType(1029, typeof(UnityEngine.Battlehub.SL2.PersistentRigidbody<Guid>))
                .AddSubType(1030, typeof(UnityEngine.Battlehub.SL2.PersistentCollider<Guid>))
                .AddSubType(1031, typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystem<Guid>))
                .AddSubType(1032, typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemForceField<Guid>));
            model.Add(typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentEventSystem<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentFlare<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentFont<Guid>), true);
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentGraphic<Guid>), true)
                .AddSubType(1027, typeof(UnityEngine.UI.Battlehub.SL2.PersistentMaskableGraphic<Guid>));
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentGraphicRaycaster<Guid>), true);
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentImage<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentLineRenderer<Guid>), true);
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentMaskableGraphic<Guid>), true)
                .AddSubType(1025, typeof(UnityEngine.UI.Battlehub.SL2.PersistentImage<Guid>))
                .AddSubType(1026, typeof(UnityEngine.UI.Battlehub.SL2.PersistentText<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentMonoBehaviour<Guid>), true)
                .AddSubType(1026, typeof(RTCommon.Battlehub.SL2.PersistentExposeToEditor<Guid>))
                .AddSubType(1027, typeof(Cubeman.Battlehub.SL2.PersistentGameCameraFollow<Guid>))
                .AddSubType(1028, typeof(RTEditor.Battlehub.SL2.PersistentGameViewCamera<Guid>))
                .AddSubType(1030, typeof(Cubeman.Battlehub.SL2.PersistentCubemanCharacter<Guid>))
                .AddSubType(1031, typeof(Cubeman.Battlehub.SL2.PersistentCubemanUserControl<Guid>))
                .AddSubType(1032, typeof(Cubeman.Battlehub.SL2.PersistentCubemenGame<Guid>))
                .AddSubType(1034, typeof(Cubeman.Battlehub.SL2.PersistentGameCharacter<Guid>))
                .AddSubType(1035, typeof(Cubeman.Battlehub.SL2.PersistentGameFerry<Guid>))
                .AddSubType(1036, typeof(Cubeman.Battlehub.SL2.PersistentGameFerryBehavior<Guid>))
                .AddSubType(1037, typeof(Cubeman.Battlehub.SL2.PersistentGameFerryButton<Guid>))
                .AddSubType(1038, typeof(Cubeman.Battlehub.SL2.PersistentGameGoal<Guid>))
                .AddSubType(1039, typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentUIBehaviour<Guid>))
                .AddSubType(1040, typeof(RTEditor.Battlehub.SL2.PersistentRuntimeAnimation<Guid>))
                .AddSubType(1041, typeof(RTBuilder.Battlehub.SL2.PersistentMaterialPalette<Guid>))
                .AddSubType(1042, typeof(ProBuilderIntegration.Battlehub.SL2.PersistentPBMesh<Guid>))
                .AddSubType(1043, typeof(ProBuilderIntegration.Battlehub.SL2.PersistentPBPolyShape<Guid>))
                .AddSubType(1044, typeof(RTTerrain.Battlehub.SL2.PersistentTerrainBrushSource<Guid>));
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentOutline<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystem<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemRenderer<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentPhysicMaterial<Guid>), true);
            model.Add(typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentPointerInputModule<Guid>), true)
                .AddSubType(1025, typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentStandaloneInputModule<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentRectTransform<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentRenderTexture<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentRuntimeAnimatorController<Guid>), true);
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentSelectable<Guid>), true)
                .AddSubType(1025, typeof(UnityEngine.UI.Battlehub.SL2.PersistentButton<Guid>));
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentShadow<Guid>), true)
                .AddSubType(1025, typeof(UnityEngine.UI.Battlehub.SL2.PersistentOutline<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentTerrain<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentTerrainData<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentSkybox<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentSprite<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentSpriteRenderer<Guid>), true);
            model.Add(typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentStandaloneInputModule<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentTerrainCollider<Guid>), true);
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentText<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentTexture<Guid>), true)
                .AddSubType(1025, typeof(UnityEngine.Battlehub.SL2.PersistentRenderTexture<Guid>))
                .AddSubType(1026, typeof(UnityEngine.Battlehub.SL2.PersistentTexture2D<Guid>))
                .AddSubType(1027, typeof(UnityEngine.Battlehub.SL2.PersistentTexture3D<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentTexture2D<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentTexture3D<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentTransform<Guid>), true)
                .AddSubType(1025, typeof(UnityEngine.Battlehub.SL2.PersistentRectTransform<Guid>));
            model.Add(typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentUIBehaviour<Guid>), true)
                .AddSubType(1025, typeof(UnityEngine.UI.Battlehub.SL2.PersistentGraphic<Guid>))
                .AddSubType(1026, typeof(UnityEngine.UI.Battlehub.SL2.PersistentSelectable<Guid>))
                .AddSubType(1027, typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentBaseRaycaster<Guid>))
                .AddSubType(1028, typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentEventSystem<Guid>))
                .AddSubType(1029, typeof(UnityEngine.EventSystems.Battlehub.SL2.PersistentBaseInputModule<Guid>))
                .AddSubType(1030, typeof(UnityEngine.UI.Battlehub.SL2.PersistentBaseMeshEffect<Guid>));
            model.Add(typeof(RTCommon.Battlehub.SL2.PersistentExposeToEditor<Guid>), true);
            model.Add(typeof(RTEditor.Battlehub.SL2.PersistentGameViewCamera<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemForceField<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentTerrainLayer<Guid>), true);
            model.Add(typeof(RTSL.Battlehub.SL2.PersistentRuntimePrefab<Guid>), true)
                .AddSubType(1025, typeof(RTSL.Battlehub.SL2.PersistentRuntimeScene<Guid>));
            model.Add(typeof(RTSL.Battlehub.SL2.PersistentRuntimeScene<Guid>), true);
            model.Add(typeof(RTEditor.Battlehub.SL2.PersistentRuntimeAnimation<Guid>), true);
            model.Add(typeof(RTEditor.Battlehub.SL2.PersistentRuntimeAnimationClip<Guid>), true);
            model.Add(typeof(Cubeman.Battlehub.SL2.PersistentCubemanCharacter<Guid>), true);
            model.Add(typeof(Cubeman.Battlehub.SL2.PersistentCubemanUserControl<Guid>), true);
            model.Add(typeof(Cubeman.Battlehub.SL2.PersistentCubemenGame<Guid>), true);
            model.Add(typeof(Cubeman.Battlehub.SL2.PersistentGameCameraFollow<Guid>), true);
            model.Add(typeof(Cubeman.Battlehub.SL2.PersistentGameCharacter<Guid>), true);
            model.Add(typeof(Cubeman.Battlehub.SL2.PersistentGameFerry<Guid>), true);
            model.Add(typeof(Cubeman.Battlehub.SL2.PersistentGameFerryBehavior<Guid>), true);
            model.Add(typeof(Cubeman.Battlehub.SL2.PersistentGameFerryButton<Guid>), true);
            model.Add(typeof(Cubeman.Battlehub.SL2.PersistentGameGoal<Guid>), true);
            model.Add(typeof(RTBuilder.Battlehub.SL2.PersistentMaterialPalette<Guid>), true);
            model.Add(typeof(ProBuilderIntegration.Battlehub.SL2.PersistentPBMesh<Guid>), true);
            model.Add(typeof(ProBuilderIntegration.Battlehub.SL2.PersistentPBPolyShape<Guid>), true);
            model.Add(typeof(RTTerrain.Battlehub.SL2.PersistentTerrainBrushSource<Guid>), true);
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentVector2<Guid>), true);
            model.Add(typeof(UnityEngine.Vector2), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentVector2<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentVector3<Guid>), true);
            model.Add(typeof(UnityEngine.Vector3), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentVector3<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentVector4<Guid>), true);
            model.Add(typeof(UnityEngine.Vector4), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentVector4<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentColor<Guid>), true);
            model.Add(typeof(UnityEngine.Color), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentColor<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentColor32<Guid>), true);
            model.Add(typeof(UnityEngine.Color32), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentColor32<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentMatrix4x4<Guid>), true);
            model.Add(typeof(UnityEngine.Matrix4x4), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentMatrix4x4<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentAnimationCurve<Guid>), true);
            model.Add(typeof(UnityEngine.AnimationCurve), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentAnimationCurve<Guid>));
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentAnimationTriggers<Guid>), true);
            model.Add(typeof(UnityEngine.UI.AnimationTriggers), false).SetSurrogate(typeof(UnityEngine.UI.Battlehub.SL2.PersistentAnimationTriggers<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentBoneWeight<Guid>), true);
            model.Add(typeof(UnityEngine.BoneWeight), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentBoneWeight<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentBounds<Guid>), true);
            model.Add(typeof(UnityEngine.Bounds), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentBounds<Guid>));
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentButtonNestedButtonClickedEvent<Guid>), true);
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentColorBlock<Guid>), true);
            model.Add(typeof(UnityEngine.UI.ColorBlock), false).SetSurrogate(typeof(UnityEngine.UI.Battlehub.SL2.PersistentColorBlock<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentDetailPrototype<Guid>), true);
            model.Add(typeof(UnityEngine.DetailPrototype), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentDetailPrototype<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentGradient<Guid>), true);
            model.Add(typeof(UnityEngine.Gradient), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentGradient<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentGradientAlphaKey<Guid>), true);
            model.Add(typeof(UnityEngine.GradientAlphaKey), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentGradientAlphaKey<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentGradientColorKey<Guid>), true);
            model.Add(typeof(UnityEngine.GradientColorKey), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentGradientColorKey<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentKeyframe<Guid>), true);
            model.Add(typeof(UnityEngine.Keyframe), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentKeyframe<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentLayerMask<Guid>), true);
            model.Add(typeof(UnityEngine.LayerMask), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentLayerMask<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentLightBakingOutput<Guid>), true);
            model.Add(typeof(UnityEngine.LightBakingOutput), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentLightBakingOutput<Guid>));
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentMaskableGraphicNestedCullStateChangedEvent<Guid>), true);
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentNavigation<Guid>), true);
            model.Add(typeof(UnityEngine.UI.Navigation), false).SetSurrogate(typeof(UnityEngine.UI.Battlehub.SL2.PersistentNavigation<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedCollisionModule<Guid>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.CollisionModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedCollisionModule<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedColorBySpeedModule<Guid>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.ColorBySpeedModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedColorBySpeedModule<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedColorOverLifetimeModule<Guid>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.ColorOverLifetimeModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedColorOverLifetimeModule<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedCustomDataModule<Guid>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.CustomDataModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedCustomDataModule<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedEmissionModule<Guid>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.EmissionModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedEmissionModule<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedExternalForcesModule<Guid>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.ExternalForcesModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedExternalForcesModule<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedForceOverLifetimeModule<Guid>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.ForceOverLifetimeModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedForceOverLifetimeModule<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedInheritVelocityModule<Guid>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.InheritVelocityModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedInheritVelocityModule<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedLightsModule<Guid>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.LightsModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedLightsModule<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedLimitVelocityOverLifetimeModule<Guid>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedLimitVelocityOverLifetimeModule<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedMainModule<Guid>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.MainModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedMainModule<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedMinMaxCurve<Guid>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.MinMaxCurve), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedMinMaxCurve<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedMinMaxGradient<Guid>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.MinMaxGradient), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedMinMaxGradient<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedNoiseModule<Guid>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.NoiseModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedNoiseModule<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedRotationBySpeedModule<Guid>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.RotationBySpeedModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedRotationBySpeedModule<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedRotationOverLifetimeModule<Guid>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.RotationOverLifetimeModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedRotationOverLifetimeModule<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedShapeModule<Guid>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.ShapeModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedShapeModule<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedSizeBySpeedModule<Guid>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.SizeBySpeedModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedSizeBySpeedModule<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedSizeOverLifetimeModule<Guid>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.SizeOverLifetimeModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedSizeOverLifetimeModule<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedSubEmittersModule<Guid>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.SubEmittersModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedSubEmittersModule<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedTrailModule<Guid>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.TrailModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedTrailModule<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedTriggerModule<Guid>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.TriggerModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedTriggerModule<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedVelocityOverLifetimeModule<Guid>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.VelocityOverLifetimeModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedVelocityOverLifetimeModule<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedTextureSheetAnimationModule<Guid>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.TextureSheetAnimationModule), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedTextureSheetAnimationModule<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentQuaternion<Guid>), true);
            model.Add(typeof(UnityEngine.Quaternion), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentQuaternion<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentRect<Guid>), true);
            model.Add(typeof(UnityEngine.Rect), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentRect<Guid>));
            model.Add(typeof(UnityEngine.SceneManagement.Battlehub.SL2.PersistentScene<Guid>), true);
            model.Add(typeof(UnityEngine.SceneManagement.Scene), false).SetSurrogate(typeof(UnityEngine.SceneManagement.Battlehub.SL2.PersistentScene<Guid>));
            model.Add(typeof(UnityEngine.UI.Battlehub.SL2.PersistentSpriteState<Guid>), true);
            model.Add(typeof(UnityEngine.UI.SpriteState), false).SetSurrogate(typeof(UnityEngine.UI.Battlehub.SL2.PersistentSpriteState<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentTreeInstance<Guid>), true);
            model.Add(typeof(UnityEngine.TreeInstance), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentTreeInstance<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentTreePrototype<Guid>), true);
            model.Add(typeof(UnityEngine.TreePrototype), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentTreePrototype<Guid>));
            model.Add(typeof(RTCommon.Battlehub.SL2.PersistentExposeToEditorUnityEvent<Guid>), true);
            model.Add(typeof(UnityEngine.Events.Battlehub.SL2.PersistentUnityEvent<Guid>), true)
                .AddSubType(1032, typeof(UnityEngine.UI.Battlehub.SL2.PersistentButtonNestedButtonClickedEvent<Guid>));
            model.Add(typeof(UnityEngine.Events.Battlehub.SL2.PersistentUnityEventBase<Guid>), true)
                .AddSubType(1025, typeof(UnityEngine.Events.Battlehub.SL2.PersistentUnityEvent<Guid>))
                .AddSubType(1026, typeof(RTCommon.Battlehub.SL2.PersistentExposeToEditorUnityEvent<Guid>))
                .AddSubType(1027, typeof(UnityEngine.UI.Battlehub.SL2.PersistentMaskableGraphicNestedCullStateChangedEvent<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedBurst<Guid>), true);
            model.Add(typeof(UnityEngine.ParticleSystem.Burst), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentParticleSystemNestedBurst<Guid>));
            model.Add(typeof(RTEditor.Battlehub.SL2.PersistentRuntimeAnimationProperty<Guid>), true);
            model.Add(typeof(RTEditor.RuntimeAnimationProperty), false).SetSurrogate(typeof(RTEditor.Battlehub.SL2.PersistentRuntimeAnimationProperty<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentHumanBone<Guid>), true);
            model.Add(typeof(UnityEngine.HumanBone), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentHumanBone<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentHumanDescription<Guid>), true);
            model.Add(typeof(UnityEngine.HumanDescription), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentHumanDescription<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentHumanLimit<Guid>), true);
            model.Add(typeof(UnityEngine.HumanLimit), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentHumanLimit<Guid>));
            model.Add(typeof(UnityEngine.Battlehub.SL2.PersistentSkeletonBone<Guid>), true);
            model.Add(typeof(UnityEngine.SkeletonBone), false).SetSurrogate(typeof(UnityEngine.Battlehub.SL2.PersistentSkeletonBone<Guid>));
            model.Add(typeof(ProBuilderIntegration.Battlehub.SL2.PersistentPBAutoUnwrapSettings<Guid>), true);
            model.Add(typeof(ProBuilderIntegration.PBAutoUnwrapSettings), false).SetSurrogate(typeof(ProBuilderIntegration.Battlehub.SL2.PersistentPBAutoUnwrapSettings<Guid>));
            model.Add(typeof(ProBuilderIntegration.Battlehub.SL2.PersistentPBFace<Guid>), true);
            model.Add(typeof(ProBuilderIntegration.PBFace), false).SetSurrogate(typeof(ProBuilderIntegration.Battlehub.SL2.PersistentPBFace<Guid>));
            
            RegisterUserDefinedTypes(model);
        }
    }
}
namespace UnityEngine.Battlehub.SL2 {}
namespace System.Battlehub.SL2 {}
namespace UnityEngine.Rendering.Battlehub.SL2 {}
namespace UnityEngine.SceneManagement.Battlehub.SL2 {}
namespace UnityEngine.Audio.Battlehub.SL2 {}
namespace UnityEngine.EventSystems.Battlehub.SL2 {}
namespace UnityEngine.UI.Battlehub.SL2 {}
namespace Battlehub.RTCommon.Battlehub.SL2 {}
namespace Battlehub.RTEditor.Battlehub.SL2 {}
namespace Battlehub.RTSL.Battlehub.SL2 {}
namespace Battlehub.Cubeman.Battlehub.SL2 {}
namespace Battlehub.RTBuilder.Battlehub.SL2 {}
namespace System.Collections.Generic.Battlehub.SL2 {}
namespace Battlehub.ProBuilderIntegration.Battlehub.SL2 {}
namespace Battlehub.RTTerrain.Battlehub.SL2 {}
namespace UnityEngine.Events.Battlehub.SL2 {}


